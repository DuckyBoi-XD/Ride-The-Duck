name: Publish Python Package

on:
  release:
    types: [published]

jobs:
  deploy:
    runs-on: ubuntu-24.04
    
    permissions:
      id-token: write
      contents: read
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for setuptools-scm
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'
    
    - name: Extract version from release tag
      id: get_version
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        VERSION=${VERSION#v}  # Remove 'v' prefix if present
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Extracted version: $VERSION"
        echo "Git tag should be available for setuptools-scm"
    
    - name: Verify git tag and setuptools-scm
      run: |
        echo "Available git tags:"
        git tag --list
        echo "Current commit: $(git rev-parse HEAD)"
        echo "Current branch/ref: $GITHUB_REF"
        
        # Install setuptools-scm first
        python -m pip install --upgrade pip setuptools-scm
        
        # Check what version setuptools-scm will generate
        echo "setuptools-scm version preview:"
        python -c "
        import setuptools_scm
        try:
            version = setuptools_scm.get_version()
            print('Generated version:', version)
            if '+' in version or 'dev' in version:
                print('WARNING: This appears to be a development version!')
                print('Make sure you are building from a tagged commit.')
                exit(1)
            else:
                print('SUCCESS: Clean release version detected')
        except Exception as e:
            print('Error getting version:', e)
            exit(1)
        "
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build twine setuptools-scm
    
    - name: Build package
      run: python -m build
    
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@release/v1